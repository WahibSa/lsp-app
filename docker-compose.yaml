services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    image: laravel-php
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    networks:
      - laravel-network

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: laravel-webserver
    restart: unless-stopped
    ports:
      - "1010:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel-network

  # MySQL Database Service
  db:
    image: mysql:latest
    container_name: laravel-db
    restart: unless-stopped
    ports:
      - "1000:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: laravel
      MYSQL_USER: laravel
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel-network

  # Adminer Service
  adminer:
    image: adminer:latest
    container_name: laravel-adminer
    restart: unless-stopped
    ports:
      - "1001:8080"
    depends_on:
      - db
    networks:
      - laravel-network

# Docker Networks
networks:
  laravel-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
